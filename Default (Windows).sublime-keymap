// view.settings().get('margin')
// view.settings().set('margin', 0)

 [

// ------------------------------------------ // NATIVE

   { "keys": ["alt+x"], "command": "wrap_lines" }, // ?
   { "keys": ["alt+e"], "command": "reindent" },

   // { "keys": ["ctrl+shift+c"], "command": "close" },
   // { "keys": ["ctrl+shift+x"], "command": "close_window" },



// Bookmarks
   { "keys": ["ctrl+="], "command": "next_bookmark" },
   { "keys": ["shift+-"], "command": "prev_bookmark" },
   { "keys": ["ctrl++"], "command": "toggle_bookmark" },
   { "keys": ["ctrl+_"], "command": "clear_bookmarks" },
   { "keys": ["alt+="], "command": "select_all_bookmarks" },


// Toggle
   { "keys": ["alt+;"], "command": "toggle_tabs" },
   { "keys": ["alt+'"], "command": "toggle_status_bar" },
   { "keys": ["ctrl+k", "ctrl+m",], "command": "toggle_minimap" },







// Toogle: Side Bar WITH INDENTATION
   // {
   //    "keys": ["ctrl+shift+q"],
   //    "command": "chain",
   //    "args": {
   //       "commands": [
   //          ["toggle_side_bar"],
   //          ["set_setting", {"setting": "margin", "value": 400}],
   //       ]
   //    }
   // },

   // { "keys": ["ctrl+k", "ctrl+b"], "command": "toggle_side_bar" },
   {
      "keys": ["ctrl+k", "ctrl+b"],
      "command": "chain",
      "args": {
         "commands": [
            ["toggle_side_bar"],
            ["toggle_setting", {"setting": "draw_centered"}],
            // ["set_setting", {"setting": "margin", "value": 0}],
         ]
      }
   },
   {
      "keys": ["ctrl+q"],
      "command": "chain",
      "args": {
         "commands": [
            ["toggle_side_bar"],
            ["toggle_setting", {"setting": "draw_centered"}],
            // ["set_setting", {"setting": "margin", "value": 0}],
         ]
      }
   },

// ISSUES:
// No way to toggle a setting with value (from one defined value to another defined value), so two keybidings must be used.
// "set_setting" command sets "margin" setting only on file basis (should be globaly)! Margin on other files doesn't change.
//          Works on current file in the view, only if the file is "focused"
//          ....


// Minor ISSUES:
// Magrin value must be the fixed number, while it's very easy to exidently chage the side bar width.
// Must set "animation_enabled" setting to false, because margin starts after side bar ends, instead of where side bar starts.

// After closing side bar, tabs menu shifts (while keeping proportions of the tabs) to the left, on the previouse side bar width size. Shouldn't shift anyhow, instead the place tabs occupy after the shift should be replaced with placeholder of the side bar color


// Toogle: wrap_width:100 <> wrap_width:125 <> wrap_width:155
   {
      "keys": ["ctrl+insert"],
      "command": "chain",
      "args": {
         "commands": [
            ["set_setting", {"setting": "wrap_width", "value": 100}],
            ["set_setting", {"setting": "rulers", "value": [-0.2, 100]}],
            ["set_setting", {"setting": "wrap_width_style", "value": "constant"}],
         ]
      }
   },

   {
      "keys": ["ctrl+end"],
      "command": "chain",
      "args": {
         "commands": [
            ["set_setting", {"setting": "wrap_width", "value": 110}],
            ["set_setting", {"setting": "rulers", "value": [-0.2, 110]}],
            ["set_setting", {"setting": "wrap_width_style", "value": "constant"}],
         ]
      }
   },

   {
      "keys": ["ctrl+down"],
      "command": "chain",
      "args": {
         "commands": [
            ["set_setting", {"setting": "wrap_width", "value": 120}],
            ["set_setting", {"setting": "rulers", "value": [-0.2, 120]}],
            ["set_setting", {"setting": "wrap_width_style", "value": "constant"}],
         ]
      }
   },

   {
      "keys": ["ctrl+clear"],
      "command": "chain",
      "args": {
         "commands": [
            ["set_setting", {"setting": "wrap_width", "value": 150}],
            ["set_setting", {"setting": "rulers", "value": [-0.2, 150]}],
            ["set_setting", {"setting": "wrap_width_style", "value": "min"}],
         ]
      }
   },


// Markdown: automatic folding of inline references url
   // {
   //    "keys": ["ctrl+l", "ctrl+f"],
   //    "command": "chain",
   //    "args": {
   //       "commands": [
   //          ["toggle_setting", {"setting": "mde.auto_fold_link.enabled"}],
   //          ["close"],
   //          ["reopen_last_file"],
   //       ]
   //    }
   // },




// Toggle/Set Setting

// Blured Side Bar
   // { "keys": ["alt+q"], "command": "toggle_setting",
   //   "args": {"setting": "blured_side_bar"},
   // },

   {
     "keys": ["alt+s"], "command": "set_setting",
     "args": {"setting": "margin", "value": 0,}
   },
   {
     "keys": ["alt+a"], "command": "set_setting",
     "args": {"setting": "margin", "value": 300,}
   },

   { "keys": ["alt+w"], "command": "toggle_setting",
     "args": {"setting": "word_wrap"},
   },

   { "keys": ["ctrl+alt+shift+w"], "command": "toggle_setting",
     "args": {"setting": "draw_centered"},
   },

   { "keys": ["ctrl+k", "ctrl+n"], "command": "toggle_setting",
     "args": {"setting": "line_numbers"}
   },
   { "keys": ["ctrl+k", "ctrl+k", "ctrl+n"], "command": "toggle_setting",
     "args": {"setting": "gutter"},
   },



// Distraction free MOD
   // { "keys": ["shift+f11"], "command": "toggle_distraction_free" },
   // { "keys": ["f11"], "command": "toggle_full_screen" },



// CODMANDS WITH OWERWRITEN DEFOULT KEY-BINDING



   // { "keys": ["ctrl+keypad_plus"], "command": "increase_font_size" },
   // { "keys": ["ctrl++"], "command": "increase_font_size" },
   // { "keys": ["ctrl+="], "command": "increase_font_size" },
   // { "keys": ["ctrl+keypad_minus"], "command": "decrease_font_size" },
   // { "keys": ["ctrl+-"], "command": "decrease_font_size" },



// { "keys": ["ctrl+q"]
   { "keys": ["alt+q"], "command": "toggle_record_macro" },
// { "keys": ["ctrl+shift+q"]
   { "keys": ["alt+shift+q"], "command": "run_macro" },


// { "keys": ["alt+w"]
   { "keys": ["alt+z"], "command": "toggle_whole_word", "context":
      [{"key": "panel_type", "operand": "find"}, {"key": "panel_has_focus"}],
   },


   // { "keys": ["ctrl+r"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },


   // { "keys": ["alt+a"], "command": "toggle_preserve_case", "context":
   //    [{"key": "panel_type", "operand": "find"}, {"key": "panel_has_focus"}],
   // },


   // { "keys": ["ctrl+insert"], "command": "copy" },
   // { "keys": ["ctrl+end"], "command": "move_to", "args": {"to": "eof", "extend": false} },
   // { "keys": ["ctrl+down"], "command": "scroll_lines", "args": {"amount": -1.0 } },




// ------------------------------------------

// ------------------------------------------ // PACKAGES


// Chain of Command


// Reopen a file
   {
      "keys": ["ctrl+r"],
      "command": "chain",
      "args": {
         "commands": [
            ["close"],
            ["reopen_last_file"],
         ]
      }
   },




// {
//    "keys": ["ctrl+alt+d"],
//    "command": "chain",
//    "args": {
//       "commands": [
//          ["select_all"],
//          ["copy"],
//          ["new_file"],
//          ["paste"],
//          ["save"]
//       ]
//    }
// },

// Gist
   { "keys": ["ctrl+k", "ctrl+p"], "command": "gist_private" },
   { "keys": ["ctrl+k", "ctrl+s"], "command": "gist_update_file" },
   { "keys": ["ctrl+k", "ctrl+o"], "command": "gist_list" },
   { "keys": ["ctrl+k", "ctrl+i"], "command": "insert_gist_list" },
   { "keys": ["ctrl+k", "ctrl+["], "command": "gist" },
   { "keys": ["ctrl+k", "ctrl+]"], "command": "gist_add_file" },
   { "keys": ["ctrl+k", "ctrl+g"], "command": "gist_gitio" },


// TERMINUS

   { "keys": ["ctrl+`"], "command": "terminus_keypress", "args": {"key": "`", "ctrl": true}, "context": [{"key": "terminus_view"}] },

   { "keys": ["ctrl+w"], "command": "terminus_close", "context": [{ "key": "terminus_view"}] },


   {
      "keys": ["alt+`"], "command": "toggle_terminus_panel", "args": {
         "cwd": "${file_path:${folder}}"
      }
   },
   {
      "keys": ["ctrl+alt+shift+t"], "command": "terminus_open", "args": {
         "cwd": "${file_path:${folder}}"
      }
   },


// Wrap with abreviation
   {
      "keys": ["ctrl+shift+g"],
      "command": "emmet_wrap_with_abbreviation",
      "context": [{"key": "setting.is_widget",  "operand": false }]
   },



// Auto Save
   { "keys": ["ctrl+alt+shift+s"], "command": "auto_save" },

// highlight_modified_tabs // toggling this setting doesn't work
// view.settings().set('highlight_modified_tabs', false) // doesn't work in st console



// GoTo-CSS-Declaration
   {
      "keys": ["ctrl+shift+."], "command": "goto_css_declaration",
      "args": {"goto": "next"}
   },
   {
      "keys": ["ctrl+shift+,"],  "command": "goto_css_declaration",
      "args": {"goto": "prev"}
   },





// Layout // File Groups // Tabs (NATIVE)


// Tab switch
   { "keys": ["alt+pagedown"], "command": "next_view" },
   { "keys": ["alt+shift+pagedown"], "command": "next_view", "args": {"extend": true} },
   { "keys": ["alt+pageup"], "command": "prev_view" },
   { "keys": ["alt+shift+pageup"], "command": "prev_view", "args": {"extend": true} },



   // { "keys": ["ctrl+alt+1"], "command": "focus_group", "args": { "group": 0 } },
   // { "keys": ["ctrl+alt+2"], "command": "focus_group", "args": { "group": 1 } },
   { "keys": ["ctrl+alt+3"], "command": "focus_group", "args": { "group": 2 } },
   // { "keys": ["ctrl+alt+4"], "command": "focus_group", "args": { "group": 3 } },
   { "keys": ["ctrl+alt+5"], "command": "focus_group", "args": { "group": 4 } },
   { "keys": ["ctrl+alt+6"], "command": "focus_group", "args": { "group": 5 } },
   { "keys": ["ctrl+alt+7"], "command": "focus_group", "args": { "group": 6 } },
   { "keys": ["ctrl+alt+8"], "command": "focus_group", "args": { "group": 7 } },
   { "keys": ["ctrl+alt+9"], "command": "focus_group", "args": { "group": 8 } },

   { "keys": ["ctrl+0"], "command": "focus_side_bar" },



// Layout change


   // {
   //    "keys": ["ctrl+1"],
   //    "command": "set_layout",
   //    "args":
   //    {
   //       "cols": [0.0, 1.0, 1.0],
   //       "rows": [0.0, 1.0, 1.0],
   //       "cells":
   //       [
   //          [0, 0, 1, 1], [1, 0, 2, 1],
   //          [0, 1, 1, 2], [1, 1, 2, 2]
   //       ]
   //    }
   // },
   {
      "keys": ["ctrl+alt+1"],
      "command": "chain",
      "args": {
         "commands": [
            [
               "set_layout",
               {
                  "cols": [ 0.00, 1.0, 1.0 ],
                  "rows": [ 0.00,
                            0.80,
                            1.00,],
                  "cells":
                  [
                     [0, 0, 1, 1], [1, 0, 2, 1],
                     [0, 1, 2, 2], [2, 2, 2, 2]
                  ]
               }
            ],
            ["focus_group", {"group": 0}]
         ]
      }
   },
   {
      "keys": ["ctrl+1"],
      "command": "chain",
      "args": {
         "commands": [
            [
               "set_layout",
               {
                  "cols": [ 0.00, 1.0, 1.0 ],
                  "rows": [ 0.00,
                            1.00,
                            1.00,],
                  "cells":
                  [
                     [0, 0, 1, 1], [1, 0, 2, 1],
                     [0, 1, 1, 2], [1, 1, 2, 2]
                  ]
               }
            ],
            ["focus_group", {"group": 0}]
         ]
      }
   },



   // {
   //    "keys": ["ctrl+2"],
   //    "command": "set_layout",
   //    "args":
   //    {
   //       "cols": [0.0, 0.0, 1.0],
   //       "rows": [0.0, 1.0, 1.0],
   //       "cells":
   //       [
   //          [0, 0, 1, 1], [1, 0, 2, 1],
   //          [0, 1, 1, 2], [1, 1, 2, 2]
   //       ]
   //    }
   // },
   {
      "keys": ["ctrl+alt+2"],
      "command": "chain",
      "args": {
         "commands": [
            [
               "set_layout",
               {
                  "cols": [ 0.00, 0.0, 1.0],
                  "rows": [ 0.00,
                            0.80,
                            1.00, ],
                  "cells":
                  [
                     [0, 0, 1, 1], [1, 0, 2, 1],
                     [0, 1, 2, 2], [2, 2, 2, 2]
                  ]
               }
            ],
            ["focus_group", {"group": 1}]
         ]
      }
   },
   {
      "keys": ["ctrl+2"],
      "command": "chain",
      "args": {
         "commands": [
            [
               "set_layout",
               {
                  "cols": [ 0.00, 0.0, 1.0],
                  "rows": [ 0.00,
                            1.00,
                            1.00, ],
                  "cells":
                  [
                     [0, 0, 1, 1], [1, 0, 2, 1],
                     [0, 1, 1, 2], [1, 1, 2, 2],
                  ]
               }
            ],
            ["focus_group", {"group": 1}]
         ]
      }
   },





   {
      "keys": ["ctrl+3"],
      "command": "chain",
      "args": {
         "commands": [
            [
               "set_layout",
               {
                  "cols": [ 0.00, 0.0, 1.0],
                  "rows": [ 0.00,
                            0.00,
                            1.00, ],
                  "cells":
                  [
                     [0, 0, 1, 1], [1, 0, 2, 1],
                     [0, 1, 2, 2], [2, 2, 2, 2]
                  ]
               }
            ],
            ["focus_group", {"group": 2}]
         ]
      }
   },
   // 3 raws
   // {
   //    "keys": ["ctrl+alt+3"],
   //    "command": "set_layout",
   //    "args":
   //    {
   //       "cols": [0.0, 1.0],
   //       "rows": [0.0, 0.33, 0.66, 1.0],
   //       "cells": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]]
   //    }
   // },

   // 3 columns
   {
      "keys": ["ctrl+alt+shift+3"],
      "command": "set_layout",
      "args":
      {
         "cols": [ 0.00, 0.33, 0.66, 1.0],
         "rows": [ 0.00,
                   1.00,],
         "cells": [
                     [0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1],
                     [3, 1, 3, 1]
                  ]
      }
   },




   {
      "keys": ["ctrl+alt+4"],
      "command": "set_layout",
      "args":
      {
         "cols": [0.0, 0.5, 1.0],
         "rows": [0.0, 0.5, 1.0],
         "cells":
         [
            [0, 0, 1, 1], [1, 0, 2, 1],
            [0, 1, 1, 2], [1, 1, 2, 2]
         ]
      }
   },
   {
      "keys": ["ctrl+4"],
      "command": "chain",
      "args": {
         "commands": [
            [
               "set_layout",
               {
                  "cols": [ 0.00, 0.0, 1.0],
                  "rows": [ 0.00,
                            0.00,
                            1.00, ],
                  "cells":
                  [
                     [0, 0, 1, 1], [1, 0, 2, 1],
                     [0, 1, 1, 2], [1, 1, 2, 2],
                  ]
               }
            ],
            ["focus_group", {"group": 3}]
         ]
      }
   },

   // {
   //    "keys": ["ctrl+0"],
   //    "command": "set_layout",
   //    "args":
   //    {
   //       "cols": [0.0, 1.0],
   //       "rows": [0.0, 1.0],
   //       "cells": [[0, 0, 1, 1]]
   //    }
   // },
   {
      "keys": ["ctrl+alt+0"],
      "command": "chain",
      "args": {
         "commands": [
            [
               "set_layout",
               {
                  "cols": [0.0, 1.0],
                  "rows": [0.0, 1.0],
                  "cells": [[0, 0, 1, 1]]
               }
            ],
            ["focus_group", {"group": 0}]
         ]
      }
   },




// // Layout change
//    {
//       "keys": ["ctrl+0"],
//       "command": "set_layout",
//       "args":
//       {
//          "cols": [0.0, 1.0],
//          "rows": [0.0, 1.0],
//          "cells": [[0, 0, 1, 1]]
//       }
//    },

//    {
//       "keys": ["ctrl+1"],
//       "command": "set_layout",
//       "args":
//       {
//          "cols": [0.0, 1.0, 1.0],
//          "rows": [0.0, 1.0, 1.0],
//          "cells":
//          [
//             [0, 0, 1, 1], [1, 0, 2, 1],
//             [0, 1, 1, 2], [1, 1, 2, 2]
//          ]
//       }
//    },
//    {
//       "keys": ["ctrl+2"],
//       "command": "set_layout",
//       "args":
//       {
//          "cols": [0.0, 0.0, 1.0],
//          "rows": [0.0, 1.0, 1.0],
//          "cells":
//          [
//             [0, 0, 1, 1], [1, 0, 2, 1],
//             [0, 1, 1, 2], [1, 1, 2, 2]
//          ]
//       }
//    },
//    {
//       "keys": ["ctrl+4"],
//       "command": "set_layout",
//       "args":
//       {
//          "cols": [0.0, 0.5, 1.0],
//          "rows": [0.0, 0.5, 1.0],
//          "cells":
//          [
//             [0, 0, 1, 1], [1, 0, 2, 1],
//             [0, 1, 1, 2], [1, 1, 2, 2]
//          ]
//       }
//    },


//    {
//       "keys": ["ctrl+3"],
//       "command": "set_layout",
//       "args":
//       {
//          "cols": [0.0, 0.33, 0.66, 1.0],
//          "rows": [0.0, 1.0],
//          "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]
//       }
//    },
//    {
//       "keys": ["ctrl+alt+shift+3"],
//       "command": "set_layout",
//       "args":
//       {
//          "cols": [0.0, 1.0],
//          "rows": [0.0, 0.33, 0.66, 1.0],
//          "cells": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]]
//       }
//    },

]