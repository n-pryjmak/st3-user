{
    "name": "Kristina_light",
    "author": "Nazar Primac",
    "variables":

    {
        // "foreg": "hsl(0, 0%, 0%)",
        // "backg": "hsl(0, 0%, 100%)",

        // "foreg": "#aaaaaa",
        // "foreg": "#bbbbbb",
        // "foreg": "hsl(0, 0%, 77%)",
        // "foreg": "#cccccc",
        // "backg": "#131313",

        "foreg": "#555555",
        "backg": "#ECECEC",


        "backg_dark": "color(var(backg) l(- 3%))",

        // "punctuation": "var(foreg)",
        // "punctuation": "hsl(183, 76%, 45%)",
        "punctuation": "hsl(183, 76%, 50%)",
        // "punctuation_blue": "hsl(246, 76%, 80%)",
        "punctuation_blue": "hsl(246, 76%, 70%)",
        "punctuation_gray": "hsl(0, 0%, 80%)",
        // "punctuation_light": "var(foreg)",
        // "punctuation_light": "color(var(punctuation_md) l(+ 30%))",
        "punctuation_light": "color(var(punctuation_md) l(+ 10%))",

        "punctuation_md": "hsl(183, 76%, 45%)",
        "punctuation_light_md": "color(var(punctuation_md) l(+ 30%))",

        // "comment": "hsl(0, 0%, 65%)",
        // "comment": "hsl(216, 76%, 50%)",
        // "comment": "hsl(0, 30%, 70%)",
        // "comment": "hsl(120, 30%, 80%)",
        // "comment": "hsl(120, 13%, 50%)",
        "comment": "hsl(240, 30%, 70%)",

        // "value": "var(foreg)",
        "value": "hsl(0, 100%, 75%)",
        "value_md": "hsl(0, 100%, 75%)",
        // "str_value": "var(foreg)",
        // "str_value": "hsl(261, 100%, 65%)",
        "str_value": "hsl(0, 100%, 50%)",

        // "parameter": "hsl(120, 76%, 50%)",
        "parameter": "var(foreg)",

        // "const": "var(foreg)",
        "const": "hsl(0, 100%, 75%)",
        "const_md": "hsl(0, 100%, 75%)",

        "func_name": "hsl(246, 100%, 50%)",

        // "css_value": "hsl(300, 77%, 50%)",
        // "values_sufix": "var(foreg)",
        // "values_sufix": "hsl(300, 77%, 50%)",
        "css_value": "hsl(183, 76%, 34%)",
        "values_sufix": "hsl(183, 76%, 34%)",

        // "class_name": "hsl(121, 70%, 34%)",
        // "class_name": "var(foreg)",
        "class_name": "var(str_value)",
        "pseudo_element_name": "hsl(183, 76%, 34%)",
        "pseudo_class_name": "hsl(121, 70%, 34%)",

        // "url_path": "hsl(300, 77%, 50%)",
        "url_path": "var(str_value)",
        "url_path_md": "hsl(300, 77%, 50%)",

        "secondary": "var(foreg)",
        "secondary_md": "hsl(216, 76%, 50%)",

        "light": "hsl(120, 100%, 85%)",
        "inside": "red",


        "green": "green",
        "black": "#000000",
        "white": "#ffffff",
        "red": "hsl(0, 100%, 50%)",
        "red_md": "red",
        // "blue": "var(foreg)",
        "blue": "hsl(246, 100%, 50%)",
        "blue_md": "hsl(246, 100%, 50%)",
        "plum": "hsl(300, 77%, 50%)",
        "pink": "pink",
        "crimson": "var(foreg)",
    },



    "globals":
    {
        // "background": "#969696",
        // "background": "#AAAAAA",
        // "background": "#000000",


        "foreground": "var(foreg)",
        "background": "var(backg)",

        // "accent": "",

        // "line_highlight": "var(backg)",
        "line_highlight": "#A0804026",
        "gutter": "color(var(backg) l(- 3%)",
        // "gutter": "hsl(0, 0%, 88%)",
        // "caret": "#FFFF66",
        // "caret": "purple",
        "caret": "#00bbff",
        "block_caret": "#00bbff",

        // "invisibles": "color(var(black) a(30%))",
        "invisibles": "color(var(backg) l(70%))",

        "rulers": "color(var(backg) l(95%))",

        "selection": "color(var(light) alpha(0.7))",
        // "selection_border": "color(var(light) l(- 20%))",
        "selection_border": "color(var(light) alpha(0.7))",
        "inactive_selection": "color(var(light) alpha(0.3))",


        "misspelling": "red",
        // "shadow": "var(foreg)",
        "shadow": "color(var(foreg) alpha(0.2))",
        "active_guide": "aqua",
        "stack_guide": "aqua",
        "highlight": "blue",
        "find_highlight_foreground": "blue",
        "find_highlight": "yellow",
        // "brackets_options": "nothing",
        // "brackets_options": "bold underline",
        "brackets_options": "bold",
        "brackets_foreground": "var(inside)",
        "bracket_contents_options": "bold",
        "bracket_contents_foreground": "var(inside)",
        // "tags_options": "",
        // "tags_options": "italic",
        "tags_options": "stippled_underline",
        // "tags_options": "underline",
        "tags_foreground": "#000",

        // "font_style": "italic",
    },

    "rules": [

        {
            // "name": "",
            // "scope": "",

            // "foreground": "",
            // "foreground_adjust": "l(+ 10%)"

            // "background": "",
            // "font_style": "bold italic underline stippled_underline",
            //
        },

        {
            "name": "Plain Text",
            "scope": "text.plain",
            // "background": "hsl(70, 8%, 15%)",
            // "background": "hsl(45, 100%, 95%)",


            // "foreground": "hsl(60, 30%, 96%)",
            // "foreground": "hsl(54, 70%, 68%)",
            // "font_style": "bold",
        },


        {
            "name": "Comment",
            "scope": "comment, punctuation.definition.comment",
            "foreground": "var(comment)",
            // "font_style": "italic",
        },

        {
            "name": "Number",
            "scope": "constant.numeric, constant.language.infinity.js",
            // "scope": "constant.numeric.value, constant.language.infinity.js",
            "foreground": "var(const)",
            "font_style": "",
        },
        {
            "name": "Number Suffix",
            "scope": "storage.type.numeric",
            // "foreground": "var(pink)",
            "foreground": "aqua",
            // "font_style": "italic"
        },

        {
            "name": "String",
            "scope": "string",
            // "foreground": "var(value)",
            "foreground": "var(str_value)",
        },

        {
            "name": "Punctuation String",
            "scope": "punctuation.definition.string",
            // "scope": "string.quoted.double, string.quoted.single, string.quoted.other, meta.string, string.unquoted | (punctuation.definition.string)",
            // "scope": "(meta.attribute-with-value punctuation.definition.string, meta.attribute-with-value punctuation.separator.key-value) | (meta.attribute-selector punctuation.definition.string, meta.attribute-selector keyword.operator.logical)",
            "foreground": "color(var(str_value) l(- 20%))",
        },

        {
            "name": "Mapping key String",
            "scope": "meta.mapping.key string | meta.mapping.key punctuation.definition.string",
            "foreground": "var(foreg)",
        },

        {
            "name": "Strings",
            "scope": "string, constant.character",
            "foreground": "#BC670F",
            "background": "#FBE9AD1A"
        },
        {
            "name": "Strings: Punctuation",
            "scope": "string punctuation",
            "foreground": "#E69A4C"
        },
        {
            "name": "Strings: Escape Sequences",
            "scope": "constant.character.escape",
            "background": "#FBE9ADCC",
            "font_style": "bold"
        },
        {
            "name": "Strings: Symbols",
            "scope": "constant.other.symbol",
            "background": "#E8FFD5",
            "font_style": "bold"
        },
        {
            "name": "Embedded Source",
            "scope": "string source, text source",
            "foreground": "#434343"
        },



        {
            "name": "RESET",
            "scope": "punctuation.definition.pseudo-class.css, punctuation.definition.keyword | meta.interpolation source, constant.other.placeholder | storage.modifier.debug",

            "foreground": "var(foreg)",
        },

        {
            "name": "Punctuation",
            "scope": "punctuation.definition - ((punctuation.definition.numeric.base | constant.other.language-name | constant.character.entity.named) | punctuation.definition.constant)",
            "foreground": "var(punctuation)",
        },
        {
            "name": "Punctuation",
            "scope": "punctuation.definition.numeric.base",
            "foreground": "aqua",
        },
        {
            "name": "Punctuation",
            "scope": "constant.other.language-name",
            "foreground": "aqua",
        },


        {
            "name": "Punctuation ('://../..')",
            "scope": "punctuation.separator.path",
            "foreground": "var(comment)",
        },

        {
            "name": "Annotation Punctuation",
            "scope": "punctuation.definition.annotation", // ???
            "foreground": "var(foreg)",
        },


// punctuation.separator (',', ':')
// punctuation.section ('{},[],()')
// punctuation.accessor ('.')
// punctuation.terminator (';')

        {
            "name": "on code block: ( '{' and  '}' ) and '<couse def>:'",
            // "scope": "punctuation.section",
            "scope": "punctuation.section.block | punctuation.section.function | punctuation.section.class", // ???
            // "foreground": "var(punctuation_gray)",
        },

        {
            // "name": "(on mapping block: '{' and  '}') and '<key>:' and Sequence Punctuation and */** - unpaking",
            "name": "Container Type related",
            "scope": "(punctuation.section.mapping | meta.mapping punctuation.section.block | punctuation.section.sequence | punctuation.section.set) | (punctuation.separator.mapping.key-value | punctuation.separator.key-value) | (punctuation.definition.sequence) | (keyword.operator.unpacking.sequence, keyword.operator.unpacking.mapping) ",
            "foreground": "var(punctuation_blue)",
        },

        {
            "name": " '${' and  '}' ",
            "scope": "punctuation.section.interpolation | punctuation.definition.placeholder",
            //        + storage.type.string
            // "foreground": "var(punctuation)",
            "foreground": "var(punctuation_light)",
            // "font_style": "bold",
        },

        {
            "name": " on function call: '(' and  ')' ",
            "scope": "meta.function-call punctuation.section.group",
            // "font_style": "bold",
        },

        {
            "name": " '[' and  ']' ",
            "scope": "punctuation.section.brackets",
            "font_style": "bold",
        },


        {
            "name": "Storage",
            "scope": "storage",
            // "scope": "storage.type",
            "foreground": "var(blue)",
            "font_style": "italic"
        },



// General Purpouse Programing Languages

        {
            "name": "Built-in constant",
            "scope": "constant.language",
            // "scope": "constant.language.boolean",
            // "foreground": "var(const)",
            // "font_style": "italic",
            "font_style": "bold",
        },

        {
            "name": "User-defined constant",
            "scope": "constant.character, constant.other",
            // "foreground": "hsl(300, 30%, 68%)",
            // "foreground": "aqua",
            "font_style": "stippled_underline",
        },
        {
            "name": "Member Variable",
            "scope": "variable.member",
            // "foreground": "hsl(357, 79%, 65%)",
            "foreground": "aqua",
        },



        {
            "name": "Keywords",
            "scope": "(keyword - (keyword.operator), keyword.operator.word) | (punctuation.definition.keyword)",
            // "scope": "keyword.operator.word",
            // "scope": "keyword - (keyword.operator), keyword.operator.word, punctuation.definition.keyword.css",
            // "scope": "keyword - (source.c keyword.operator | source.c++ keyword.operator | source.objc keyword.operator | source.objc++ keyword.operator)",
            // "foreground": "var(black)",
            // "foreground": "lime",
            "font_style": "bold",
        },

        {
            "name": "Operators",
            "scope": "keyword.operator - (keyword.operator.logical | keyword.operator.comparison)",
            // "scope": "keyword.operator",
            // "foreground": "var(foreg)"
        },

        {
            "name": "Logical/Comparison operators",
            "scope": "keyword.operator.logical | keyword.operator.comparison",
            // "foreground": "var(foreg)",
            "font_style": "bold",
        },



        {
            "name": "Function/Class declaration keyword",
            "scope": "keyword.declaration",
            // "scope": "keyword.declaration.function, keyword.declaration.function.arrow.js, keyword.declaration.class",
            "foreground": "var(foreg)",
            "font_style": "italic",
        },

        {
            "name": "Function/Class declaration name | Entity name",
            "scope": "entity.name.function | entity.name.class",
            // "scope": "entity.name.function",
            // "scope": "entity.name - (entity.name.section | entity.name.tag | entity.name.label)",
            "foreground": "var(func_name)",
            // "font_style": "italic bold",
            "font_style": "bold",
        },


        {
            "name": "Function argument",
            "scope": "variable.parameter",
            // "foreground": "var(foreg)"
            "foreground": "var(parameter)",
            "font_style": "italic",
        },

        {
            "name": "Function call",
            "scope": "meta.function-call variable.function",
            // "scope": "                                 + variable.annotation",
            "font_style": "stippled_underline"
        },

        {
            // "name": "Library function call",
            "name": "Built-in function call",
            "scope": "meta.function-call support.function, support.macro",
            "foreground": "var(secondary)",
            "font_style": "underline",
        },

        {
            "name": "Built-in/?Library class/type",
            "scope": "support.type, support.class",
            // "foreground": "lime",
            "font_style": "italic",
        },


        {
            "name": "Library constant",
            "scope": "support.constant",
            "foreground": "var(blue)",
            "font_style": "italic",
        },

        {
            "name": "Language variable",
            "scope": "variable.language",
            "foreground": "var(blue)",
        },

        {
            "name": "Inherited class",
            "scope": "entity.other.inherited-class",
            // "font_style": "italic"
        },



// Java Script

        {
            "scope": "source.js.embedded.html",
            "background": "var(backg_dark)",
        },

        {
            "name": "JavaScript Dollar",
            "scope": "variable.other.dollar.only.js, variable.other.object.dollar.only.js, variable.type.dollar.only.js, support.class.dollar.only.js",
            "foreground": "var(blue2)"
        },




// HTML

        {
            "name": "'DOCTYPE html'",
            "scope": "keyword.declaration.doctype.html, constant.language.doctype.html",
            "foreground": "var(foreg)",
            "font_style": "",
        },
        {
            "name": "Markup DOCTYPE",
            // "scope": "meta.tag.sgml.doctype, meta.tag.sgml.doctype entity, meta.tag.sgml.doctype string, meta.tag.preprocessor.xml, meta.tag.preprocessor.xml entity, meta.tag.preprocessor.xml string",
            // "foreground": "var(foreg)",
        },

        {
            "scope": "text.html.basic",
            // "foreground": "var(foreg)",
        },


        {
            "name": "Tag Name",
            "scope": "entity.name.tag",
            "foreground": "var(blue)",
            // "font_style": "bold"
        },
        {
            "name": "Punctuation - Tag",
            "scope": "punctuation.definition.tag",
            "foreground": "var(comment)",
            // "font_style": "",
        },

        {
            "name": "Tag's Attribute",
            "scope": "entity.other.attribute-name",
            "foreground": "var(secondary)",
            "font_style": "italic",
        },
        {
            "name": "Punctuation of atribute's value (html & css)",
            "scope": "(meta.attribute-with-value punctuation.definition.string, meta.attribute-with-value punctuation.separator.key-value) | (meta.attribute-selector punctuation.definition.string, meta.attribute-selector keyword.operator.logical)",
            "foreground": "var(comment)",
            "font_style": "",
        },

        {
            "name": "Class & Id Name HTML",
            "scope": "meta.class-name.html string, meta.toc-list.id.html string",
            // "scope": "(meta.class-name.html string, meta.toc-list.id.html string) | (punctuation.definition.entity.css | entity.other.attribute-name.class.css, entity.other.attribute-name.id.css)",
            // "foreground": "var(class_name)",
            "foreground": "#BC670F",
            "background": "#FBE9AD1A",
            "font_style": "stippled_underline",
        },

        {
            "name": "URL Path",
            "scope": "meta.path.url.html string",
            // "foreground": "var(url_path)",
            "foreground": "#BC670F",
            "background": "#FBE9AD1A",
            "font_style": "underline",
        },



// CSS

        {
            "scope": "source.css.embedded.html",
            "background": "var(backg_dark)",
        },

        {
            "scope": "keyword.other.important.css",
            "font_style": "",
        },


        {
            "name": "Class & Id Name CSS",
            "scope": "punctuation.definition.entity.css | entity.other.attribute-name.class.css, entity.other.attribute-name.id.css",
            // "foreground": "var(class_name)",
            "foreground": "#BC670F",
            "background": "#FBE9AD1A",
            "font_style": "",
        },
        {
            "name": "Pseudo Class",
            "scope": "entity.other.pseudo-class.css | punctuation.definition.pseudo-class.css",
            // "foreground": "var(pseudo_class_name)",
            // "font_style": "",
        },
        {
            "name": "Pseudo Element",
            "scope": "entity.other.pseudo-element.css | punctuation.definition.pseudo-element.css",
            // "foreground": "var(pseudo_element_name)",
            // "font_style": "",
        },


        {
            "nane": "CSS Property Name",
            "scope": "support.type.property-name",
            // "scope": "support.type.property-name.css",
            // "foreground": "var(foreg)",
            // "foreground": "#6700B9",
            // "font_style": "italic stippled_underline",
            // "font_style": "bold",
            // "font_style": "italic",
            "font_style": "",
        },
        {
            "nane": "CSS Property Value",
            "scope": "constant.numeric.value.css, support.constant.property-value.css",
            "foreground": "var(css_value)",
            "font_style": "",
        },
        {
            "nane": "CSS Property Value Suffix",
            "scope": "constant.numeric.suffix.css",
            "foreground": "var(values_sufix)",
            "font_style": "",
        },


// Git

        {
            "name": "Commit Name",
            "scope": "markup.heading.subject.git.commit",
            "foreground": "var(foreg)",
            "font_style": "bold",
            // "background": "",
        },

        {
            "name": "Branch Name",
            "scope": "constant.language.branch-name.git.commit",
            // "foreground": "var(foreg)",
            "font_style": "bold",
            // "background": "",
        },

        {
            // "name": "",
            "scope": "markup.heading.on-branch.git.commit, markup.heading.git.commit",
            "foreground": "var(comment)",
            // "font_style": "bold",
            // "background": "",
        },

        {
            "name": "Keywords",
            "scope": "keyword.other.change-list.git.commit",
            "foreground": "var(comment)",
            "font_style": "bold",
            // "background": "",
        },

        {
            "name": "Changed File",
            "scope": "markup.changed.file.content.git.commit",
            "foreground": "var(value)",
            "font_style": "italic",
            // "background": "",
        },

        {
            "name": "String",
            "scope": "string.unquoted.git.commit",
            "foreground": "aqua",
            // "font_style": "bold",
            // "background": "",
        },


// JSON & YAML


        {
            "name": "JSON Key",
            // "scope": "meta.mapping.key.json string.quoted.double.json, meta.mapping.key.json string.quoted.single.json | meta.mapping.key.json punctuation.definition.string.begin, meta.mapping.key.json punctuation.definition.string.end",
            // "foreground": "var(foreg)",
        },

        {
            "name": "JSON / YAML Const Value",
            // "scope": "constant.language.boolean.json, constant.numeric.value.json",
            "scope": "constant.numeric.value.json | constant.numeric.value.yaml",
            "foreground": "var(value_md)",
        },


        {
            "name": "YAML Key",
            "scope": "entity.name.tag.yaml",
            // "foreground": "var(secondary_md)",
            "font_style": "",
        },

        {
            "name": "YAML String",
            "scope": "source.yaml string.unquoted",
            // "foreground": "var(str_value)"
        },

        {
            "name": "Frontmatter definition",
            // "scope": "punctuation.section.block.begin.frontmatter.markdown, punctuation.section.block.end.frontmatter.markdown",
            "scope": "meta.frontmatter punctuation.section.block",
            "foreground": "var(punctuation_md)"
        },


// Markup (markdown)



        {
            "name": "Raw Code Block",
            "scope": "markup.raw.block.markdown | markup.raw.code-fence",
            // "background": "color(var(punctuation_md) l(95%))",
        },

        {
            "name": "Code Fence Definition",
            "scope": "punctuation.definition.raw.code-fence.begin.markdown, punctuation.definition.raw.code-fence.end.markdown | constant.other.language-name.markdown",
            "foreground": "var(punctuation_md)",
            // "foreground": "var(white)",
            "font_style": "",
        },


        {
            "name": "Links Definition Punctuation",
            "scope": "punctuation.definition.link.begin.markdown, punctuation.definition.link.end.markdown | punctuation.definition.reference.begin.markdown, punctuation.definition.reference.end.markdown | punctuation.definition.metadata.begin.markdown, punctuation.definition.metadata.end.markdown",
            "foreground": "var(punctuation_md)",
            // "foreground": "var(white)",
            "font_style": "",
        },

        {
            "name": "RESET",
            "scope": "entity.name.reference.link | punctuation.definition.heading.setext.markdown | punctuation.definition.strikethrough | markup.quote punctuation.definition.blockquote | punctuation.definition.link",
            "foreground": "var(foreg)",
            "font_style": "",
        },
        {
            "name": "RESET (style)",
            "scope": "text punctuation.definition.bold",
            "font_style": "",
        },

        {
            "name": "markup heading",
            "scope": "markup.heading",
            "font_style": "bold",
        },
        {
            "name": "markup headings",
            // "scope": "markup.heading punctuation.definition.heading",
            "scope": "punctuation.definition.heading.begin.markdown",
            "foreground": "black",
        },
        {
            "name": "markup h1",
            "scope": "markup.heading.1 punctuation.definition.heading",
            "foreground": "hsl(357, 79%, 65%)",
            "font_style": "bold",
        },

        {
            "name": "Markup links Declaration",
            "scope": "meta.link.inline.description, meta.link.reference.description, meta.image.reference.description",
            "foreground": "var(blue_md)",
        },

        {
            "name": "Markup links",
            "scope": "string.other.link, markup.underline.link",
            // "scope": "string.other.link, markup.underline.link | meta.tag.inline.a.html meta.path.url.html string",
            "foreground": "var(url_path_md)",
            "font_style": ""
        },
        {
            "name": "markup bold",
            "scope": "markup.bold",
            "font_style": "bold"
        },
        {
            "name": "markup italic",
            "scope": "markup.italic",
            "font_style": "italic"
        },
        {
            "name": "markup underline",
            "scope": "markup.underline",
            "font_style": "underline"
        },
        {
            "name": "markup bold/italic",
            "scope": "markup.italic markup.bold | markup.bold markup.italic",
            "font_style": "bold italic"
        },
        {
            "name": "markup punctuation",
            "scope": "text punctuation.definition.italic | text punctuation.definition.bold",
            // "foreground": "var(white)",
            // "foreground": "var(punctuation_md)",
            // "foreground_adjust": "l(1%)"
            "foreground": "color(var(const_md) a(0.4))",
        },

        {
            "name": "markup bold/underline",
            "scope": "markup.underline markup.bold | markup.bold markup.underline",
            "font_style": "bold underline"
        },
        {
            "name": "markup italic/underline",
            "scope": "markup.underline markup.italic | markup.italic markup.underline",
            "font_style": "italic underline"
        },
        {
            "name": "markup bold/italic/underline",
            "scope": "markup.bold markup.italic markup.underline | markup.bold markup.underline markup.italic | markup.italic markup.bold markup.underline | markup.italic markup.underline markup.bold | markup.underline markup.bold markup.italic | markup.underline markup.italic markup.bold",
            "font_style": "bold italic underline"
        },


        {
            "name": "markup hr",
            "scope": "punctuation.definition.thematic-break",
            // "foreground": "hsl(32, 93%, 66%)",
        },
        {
            "name": "markup numbered list bullet",
            "scope": "markup.list.numbered.bullet, markup.list punctuation.definition.list_item",
            // "foreground": "var(red)",
            "foreground": "var(black)",
        },
        {
            "name": "markup blockquote",
            "scope": "markup.quote punctuation.definition.blockquote",
            // "foreground": "var(green)",
            // "background": "color(var(green) l(90%))",
        },


        {
            "name": "markup code",
            "scope": "markup.raw",
            // "background": "color(hsla(204, 10%, 86%, 0.7) a(0.38))",
        },

        {
            "name": "markup code",
            "scope": "markup.raw.inline | markup.quote punctuation.definition.blockquote",
            "foreground": "hsl(122, 94%, 21%)",
            "background": "color(hsla(204, 10%, 86%, 0.7) a(0.5))",
        },
        {
            "name": "markup punctuation",
            "scope": "text markup.raw.inline.markdown punctuation.definition.raw",
            "foreground": "color(hsla(204, 10%, 86%, 0.7) a(0.5))",
        },


// Critic Markup

        {
            "name": "Critics: Addition",
            "scope": "markup.critic.addition, markup.critic.addition markup.inserted",
            "foreground": "#46a524",
            "background": "color(#46a524 a(7%))"
        },
        {
            "name": "Critics: Addition Punctuation",
            "scope": "markup.critic.addition punctuation.definition",
            "foreground": "color(#46a524 a(40%))"
        },
        {
            "name": "Critics: Deletion",
            "scope": "markup.critic.deletion, markup.critic.deletion markup.deleted",
            "foreground": "#f92672",
            "background": "color(#f92672 a(7%))"
        },
        {
            "name": "Critics: Deletion Punctuation",
            "scope": "markup.critic.deletion punctuation.definition",
            "foreground": "color(#f92672 a(40%))"
        },
        {
            "name": "Critics: Comment",
            "scope": "markup.critic.comment",
            "foreground": "#7f7f7f",
            "background": "color(#7f7f7f a(7%))"
        },
        {
            "name": "Critics: Comment Punctuation",
            "scope": "markup.critic.comment punctuation.definition",
            "foreground": "color(#7f7f7f a(40%))"
        },
        {
            "name": "Critics: Highlight",
            "scope": "markup.critic.highlight, markup.critic.highlight markup.info",
            "foreground": "#6d98cf",
            "background": "color(#6d98cf a(7%))"
        },
        {
            "name": "Critics: Highlight Punctuation",
            "scope": "markup.critic.highlight punctuation.definition",
            "foreground": "color(#6d98cf a(40%))"
        },
        {
            "name": "Critics: Substitution Punctuation",
            "scope": "markup.critic.substitution punctuation.definition, markup.critic.substitution punctuation.separator",
            "foreground": "color(#ddb700 a(80%))",
            "background": "color(#ddb700 a(7%))"
        },
        {
            "name": "Critics: Substitution Deletion",
            "scope": "markup.critic.substitution, markup.critic.substitution markup.deleted",
            "foreground": "#f92672",
            "background": "color(#ddb700 a(7%))"
        },
        {
            "name": "Critics: Substitution Replacement",
            "scope": "markup.critic.substitution, markup.critic.substitution markup.inserted ",
            "foreground": "#46a524",
            "background": "color(#ddb700 a(7%))"
        },


// Diffs Markup

        {
            "name": "Diff: Header Range",
            "scope": "meta.diff.range, meta.diff.index, meta.separator",
            "foreground": "#434343",
            "background": "#EAF2F5"
        },
        {
            "name": "Diff: Header From",
            "scope": "meta.diff.header.from-file",
            "foreground": "#434343",
            "background": "#FFDDDD"
        },
        {
            "name": "Diff: Header To",
            "scope": "meta.diff.header.to-file",
            "foreground": "#434343",
            "background": "#DDFFDD"
        },
        {
            "name": "Diff: Deleted",
            "scope": "markup.deleted, markup.deleted punctuation.definition",
            "foreground": "#F92672",
            "background": "color(#F92672 a(7%))"
        },
        {
            "name": "Diff: Inserted",
            "scope": "markup.inserted, markup.inserted punctuation.definition",
            "foreground": "#46A524",
            "background": "color(#46A524 a(7%))"
        },
        {
            "name": "Diff: Changed",
            "scope": "markup.changed, markup.changed punctuation.definition",
            "foreground": "#700DDB",
            "background": "color(#700DDB a(7%))"
        },
        {
            "name": "Diff: Ignored",
            "scope": "markup.ignored, markup.ignored punctuation.definition",
            "foreground": "#565656",
            "background": "color(#565656 a(7%))"
        },
        {
            "name": "Diff: Untracked",
            "scope": "markup.untracked, markup.untracked punctuation.definition",
            "foreground": "#565656",
            "background": "color(#565656 a(7%))"
        },

        // {
        //     "name": "diff.header",
        //     "scope": "meta.diff, meta.diff.header",
        //     // "foreground": "lime",
        //     "foreground": "var(foreg)",
        // },
        // {
        //     "name": "diff.deleted",
        //     "scope": "markup.deleted",
        //     "foreground": "red"
        // },
        // {
        //     "name": "diff.inserted",
        //     "scope": "markup.inserted",
        //     "foreground": "limegreen",
        // },
        // {
        //     "name": "diff.changed",
        //     "scope": "markup.changed",
        //     // "foreground": "orange",
        //     "foreground": "hsl(54, 100%, 68%)",
        // },


        {
            "name": "Invalid",
            "scope": "invalid",
            "foreground": "hsl(0, 0%, 97%)",
            "background": "hsl(357, 79%, 65%)"
        },
        {
            "name": "Invalid deprecated",
            "scope": "invalid.deprecated",
            "foreground": "hsl(0, 0%, 97%)",
            "background": "hsl(32, 85%, 55%)"
        },


        {
            "scope": "constant.numeric.line-number.match",
            "foreground": "var(red)",
            "font_style": "bold",

        },
        {
            "scope": "entity.name.filename",
            "font_style": "stippled_underline",
        },
        {
            "scope": "message.error",
            "foreground": "var(red)"
        },

        {
            "scope": "diff.deleted",
            "background": "hsla(338, 50%, 56%, 0.15)",
            "foreground_adjust": "l(+ 5%)"
        },
        {
            "scope": "diff.deleted.char",
            "background": "hsla(338, 65%, 56%, 0.30)",
            "foreground_adjust": "l(+ 10%)"
        },
        {
            "scope": "diff.inserted",
            "background": "hsla(80, 50%, 53%, 0.15)",
            "foreground_adjust": "l(+ 5%)"
        },
        {
            "scope": "diff.inserted.char",
            "background": "hsla(80, 65%, 53%, 0.30)",
            "foreground_adjust": "l(+ 10%)"
        },


        {
            "name": "Markup DTD",
            "scope": "string.quoted.docinfo.doctype.DTD",
            "foreground": "red",
            "foreground": "aqua",
        },
    ]
}